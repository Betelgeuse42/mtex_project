Sin - ориентаци€ мен€етс€ по синусу.
Isl - ориентаци€ мен€етс€ скачком (Isl - Island).
A - мен€ютс€ все углы Ёйлера.
Z - мен€ютс€ 3ий угол Ёйлера.
N - с шумом.

ќбразцы 100 на 100 точек, амплитуда изменени€ углов Ёйлера 3 градуса.
ѕериод 20 точек. Ўум распределен нормально (мат. ожидание 0, дисперси€ 0.5).
____________________________________________________________
Figure 1 - KAM (secondorder)
Figure 2 - max([sqrt(sum(Vx.*Vx,2)),sqrt(sum(Vy.*Vy,2)),sqrt(sum(Vz.*Vz,2))],[],2)
Figure 3 - sqrt(sum(Vx.*Vx,2))+sqrt(sum(Vy.*Vy,2))+sqrt(sum(Vz.*Vz,2))
Figure 4 - sqrt(sum(Vx.*Vx,2)+sum(Vy.*Vy,2)+sum(Vz.*Vz,2))

¬идно, что KAM уже не справл€етс€ с шумом, в то врем€ как градиентный метод позвол€ет вы€вить разориентировку.

¬о вложение скрипт дл€ создани€ тестовых образцов.
ѕример вызова:

ebsd = createTestSample('testSin001.txt', 100, 100, 'sin', 'Amplitude', 2, 'Period', 6, 'Noise', 0.5, 'Coeff', [1 1; 1 1; 1 1]);
____________________________________________________________
предлагаю следующую оценку градиентной матрицы:
max([sqrt(sum(Vx.*Vx,2)),sqrt(sum(Vy.*Vy,2)),sqrt(sum(Vz.*Vz,2))],[],2)
где Vx - перва€ строка градиентной матрицы, Vy - втора€, Vz - треть€.

«десь Vx определ€ет как повернетс€ ориентировка при движение по оси X и так далее. „ерез sqrt(sum(V.*V)) мы определ€ем угол поворота